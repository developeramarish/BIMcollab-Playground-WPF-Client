// <auto-generated/>
//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


internal class BC_BimSnippet : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal BC_BimSnippet(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(BC_BimSnippet obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~BC_BimSnippet() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BIMcollab_HelperPINVOKE.delete_BC_BimSnippet(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public string GetElementReference() {
    string ret = BIMcollab_HelperPINVOKE.BC_BimSnippet_GetElementReference(swigCPtr);
    return ret;
  }

  public void SetElementReference(string value) {
    BIMcollab_HelperPINVOKE.BC_BimSnippet_SetElementReference(swigCPtr, value);
    if (BIMcollab_HelperPINVOKE.SWIGPendingException.Pending) throw BIMcollab_HelperPINVOKE.SWIGPendingException.Retrieve();
  }

  public string GetElementReferenceSchema() {
    string ret = BIMcollab_HelperPINVOKE.BC_BimSnippet_GetElementReferenceSchema(swigCPtr);
    return ret;
  }

  public void SetElementReferenceSchema(string value) {
    BIMcollab_HelperPINVOKE.BC_BimSnippet_SetElementReferenceSchema(swigCPtr, value);
    if (BIMcollab_HelperPINVOKE.SWIGPendingException.Pending) throw BIMcollab_HelperPINVOKE.SWIGPendingException.Retrieve();
  }

  public string GetAttributeSnippetType() {
    string ret = BIMcollab_HelperPINVOKE.BC_BimSnippet_GetAttributeSnippetType(swigCPtr);
    return ret;
  }

  public void SetAttributeSnippetType(string value) {
    BIMcollab_HelperPINVOKE.BC_BimSnippet_SetAttributeSnippetType(swigCPtr, value);
    if (BIMcollab_HelperPINVOKE.SWIGPendingException.Pending) throw BIMcollab_HelperPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool GetAttributeIsExternal() {
    bool ret = BIMcollab_HelperPINVOKE.BC_BimSnippet_GetAttributeIsExternal(swigCPtr);
    return ret;
  }

  public void SetAttributeIsExternal(bool value) {
    BIMcollab_HelperPINVOKE.BC_BimSnippet_SetAttributeIsExternal(swigCPtr, value);
  }

  public BC_BimSnippet() : this(BIMcollab_HelperPINVOKE.new_BC_BimSnippet(), true) {
  }

}
