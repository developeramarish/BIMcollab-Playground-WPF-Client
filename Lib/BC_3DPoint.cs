// <auto-generated/>
//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


internal class BC_3DPoint : BC_ControllableData {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal BC_3DPoint(global::System.IntPtr cPtr, bool cMemoryOwn) : base(BIMcollab_3DPointPINVOKE.BC_3DPoint_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(BC_3DPoint obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~BC_3DPoint() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BIMcollab_3DPointPINVOKE.delete_BC_3DPoint(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public BC_3DPoint(double x, double y, double z) : this(BIMcollab_3DPointPINVOKE.new_BC_3DPoint(x, y, z), true) {
  }

  public double GetX() {
    double ret = BIMcollab_3DPointPINVOKE.BC_3DPoint_GetX(swigCPtr);
    return ret;
  }

  public double GetY() {
    double ret = BIMcollab_3DPointPINVOKE.BC_3DPoint_GetY(swigCPtr);
    return ret;
  }

  public double GetZ() {
    double ret = BIMcollab_3DPointPINVOKE.BC_3DPoint_GetZ(swigCPtr);
    return ret;
  }

}
