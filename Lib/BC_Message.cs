// <auto-generated/>
//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


internal class BC_Message : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal BC_Message(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(BC_Message obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~BC_Message() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BIMcollab_MessagePINVOKE.delete_BC_Message(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public BC_MessageCode GetCode() {
    BC_MessageCode ret = (BC_MessageCode)BIMcollab_MessagePINVOKE.BC_Message_GetCode(swigCPtr);
    return ret;
  }

  public string GetText() {
    string ret = BIMcollab_MessagePINVOKE.BC_Message_GetText(swigCPtr);
    return ret;
  }

  public string GetTimestamp() {
    string ret = BIMcollab_MessagePINVOKE.BC_Message_GetTimestamp(swigCPtr);
    return ret;
  }

  public bool IsActive() {
    bool ret = BIMcollab_MessagePINVOKE.BC_Message_IsActive(swigCPtr);
    return ret;
  }

  public BC_Message() : this(BIMcollab_MessagePINVOKE.new_BC_Message(), true) {
  }

}
